# HTTPS Nginx configuration for InsightFinder MCP Server
# Place this file in /etc/nginx/sites-available/ and create a symlink to /etc/nginx/sites-enabled/

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name your-domain.com;  # Replace with your actual domain
    
    # Redirect all HTTP requests to HTTPS
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name your-domain.com;  # Replace with your actual domain
    
    # SSL Configuration
    ssl_certificate /path/to/your/certificate.crt;        # Replace with your SSL cert path
    ssl_certificate_key /path/to/your/private.key;        # Replace with your private key path
    
    # Modern SSL configuration for security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Disable server tokens for security
    server_tokens off;
    
    # Client settings
    client_max_body_size 1M;  # Match MAX_PAYLOAD_SIZE setting
    client_body_timeout 60s;
    client_header_timeout 60s;
    
    # Proxy settings for passing headers correctly
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Connection settings
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Buffer settings for better performance
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
    
    # Main MCP server proxy
    location / {
        proxy_pass http://127.0.0.1:8000;  # Your MCP server port
        
        # Add CORS headers if needed
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-API-Key" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Max-Age 86400;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # Special handling for streaming endpoints
    location /mcp/stream {
        proxy_pass http://127.0.0.1:8000;
        
        # Disable buffering for streaming
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        
        # Streaming timeouts
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }
    
    # Health check endpoint (optional logging disabled)
    location /health {
        proxy_pass http://127.0.0.1:8000;
        access_log off;
    }
    
    # API documentation endpoints
    location ~ ^/(docs|openapi\.json|redoc)$ {
        proxy_pass http://127.0.0.1:8000;
    }
    
    # Logging configuration
    access_log /var/log/nginx/mcp-server-access.log;
    error_log /var/log/nginx/mcp-server-error.log;
}
